query_data = [
    ("SELECT * FROM users", 1),
    ("SELECT id, name FROM users WHERE age > 30", 3),
    ("SELECT id FROM users JOIN orders ON users.id = orders.user_id", 4),
    ("UPDATE users SET name='John' WHERE id=1", 2),
    ("INSERT INTO users (id, name) VALUES (1, 'Alice')", 2),
    ("SELECT COUNT(*) FROM orders", 3),
    ("DELETE FROM users WHERE id=5", 2),
    ("SELECT DISTINCT name FROM users", 3),
    ("SELECT * FROM employees WHERE department = 'HR'", 3),
    ("SELECT u.id, u.name, o.total FROM users u JOIN orders o ON u.id = o.user_id", 4),
    ("SELECT * FROM products WHERE price > 100 ORDER BY price DESC", 4),
    ("SELECT city, AVG(salary) FROM employees GROUP BY city", 4),
    ("UPDATE employees SET salary = salary * 1.1 WHERE performance = 'good'", 3),
    ("SELECT name FROM customers WHERE EXISTS (SELECT * FROM orders WHERE orders.customer_id = customers.id)", 5),
    ("SELECT * FROM logs WHERE timestamp > NOW() - INTERVAL 1 DAY", 3),
    ("SELECT * FROM transactions WHERE status = 'FAILED' AND amount > 500", 4),
    ("SELECT name FROM users WHERE id IN (SELECT user_id FROM admins)", 5),
    ("SELECT name, SUM(sales) FROM sales GROUP BY name HAVING SUM(sales) > 1000", 4),
    ("SELECT id FROM orders WHERE user_id = 10 AND date BETWEEN '2023-01-01' AND '2023-12-31'", 4),
    ("INSERT INTO logs (event, created_at) VALUES ('LOGIN_ATTEMPT', NOW())", 2),
    ("UPDATE products SET stock = stock - 1 WHERE id = 101", 3),
    ("SELECT id, COUNT(*) FROM orders GROUP BY id", 4),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 30 DAY", 3),
    ("SELECT user_id, COUNT(*) FROM login_attempts GROUP BY user_id HAVING COUNT(*) > 5", 4),
    ("SELECT * FROM reviews WHERE rating >= 4 ORDER BY created_at DESC", 3),
    ("SELECT u.name, SUM(o.total) FROM users u JOIN orders o ON u.id = o.user_id GROUP BY u.name", 5),
    ("SELECT product_id, AVG(rating) FROM reviews GROUP BY product_id HAVING COUNT(*) > 10", 5),
    ("SELECT category, COUNT(*) FROM products GROUP BY category", 3),
    ("SELECT * FROM customers WHERE last_purchase > NOW() - INTERVAL 6 MONTH", 3),
    ("UPDATE orders SET status = 'SHIPPED' WHERE id = 200", 2),
    ("SELECT email FROM users WHERE active = 1", 3),
    ("DELETE FROM users WHERE banned = 1", 2),
    ("SELECT id, username FROM admins", 3),
    ("INSERT INTO feedback (user_id, comment) VALUES (15, 'Great service!')", 2),
    ("UPDATE accounts SET balance = balance - 50 WHERE user_id = 5", 3),
    ("SELECT u.id, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id", 4),
    ("SELECT * FROM orders WHERE total > 500", 3),
    ("SELECT id FROM invoices WHERE paid = 0", 3),
    ("SELECT order_id, status FROM orders WHERE date > '2024-01-01'", 3),
    ("SELECT customer_id, SUM(total) FROM transactions GROUP BY customer_id HAVING SUM(total) > 1000", 4),
    ("SELECT * FROM messages WHERE read = 0", 3),
    ("SELECT COUNT(*) FROM errors WHERE severity = 'CRITICAL'", 4),
    ("UPDATE users SET last_login = NOW() WHERE id = 5", 2),
    ("DELETE FROM transactions WHERE amount = 0", 2),
    ("SELECT * FROM inventory WHERE quantity < 10", 3),
    ("SELECT COUNT(DISTINCT user_id) FROM sessions", 4),
    ("SELECT employee_id, AVG(hours) FROM work_hours GROUP BY employee_id", 4),
    ("SELECT user_id FROM logins WHERE failed_attempts > 3", 3),
    ("SELECT username FROM users WHERE role = 'admin'", 3),
    ("INSERT INTO orders (user_id, total) VALUES (10, 250)", 2),
    ("UPDATE payments SET confirmed = 1 WHERE transaction_id = 1010", 3),
    ("SELECT id FROM tickets WHERE status = 'OPEN'", 3),
    ("SELECT /*+rule*/ a.inst_id,a.status,a.username,a.program,a.osuser,TRUNC(a.last_call_et/60) || ' mins, ' ||MOD(a.last_call_et,60) || ' secs' running, b.sql_text FROM gv a, gv b where a.status = 'ACTIVE' and a.sql_address=b.address and a.username not in (' ') and b.sql_text like 'SELECT /*+rule*/ a.inst_id,a.status,a.username%' group by a.inst_id, a.username, a.program, a.osuser, A.STATUS,a.last_call_et,TRUNC(a.last_call_et/60) || ' mins, ' || MOD(a.last_call_et,60) || ' secs',b.sql_text order by a.last_call_et ,RUNNING", 3),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("UPDATE SHDATASP.temp257202 SET ANIO_ASOF_DATE = TO_NUMBER(TO_CHAR(TO_DATE('2023-05-31 00:00:00','YYYY-MM-DD HH24:MI:SS'), 'YYYY'))  ", 3),
    ("UPDATE SHDATASP.temp257202 SET NOMBRE_1 = translate(NOMBRE_1,UNISTR('\00c0\00c1\00c2\00c3\00c4\00c5\00e0\00e1\00e2\00e3\00ff\00e5\00c7\00e7\00d0\00c8\00c9\00ca\00cb\00ff\00e9\00ea\00eb\00cc\00cd\00ce\00cf\00ec\00ed\00ee\00ef\00d1\00f1\00d2\00d3\00d4\00d5\00d6\00d8\00f2\00f3\00ff\00f5\00f6\0160\0161\00d9\00da\00db\00dc\00f9\00fa\00fb\00ff\00d7\00bf\00dd\00ff\00ff\00bf'),'AAAAAAAAAAAACCDEEEEEEEEIIIIIIIINNOOOOOOOOOOOSSUUUUUUUUXYYYY ') ", 3),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60006 SELECT /*+  parallel(t,4) parallel_index(t,4) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */INSTANCE_ID,AX_CAADD1_TRIBUTA,TIPO_PERSONA, rowid SYS_DS_ALIAS_0  from SHDATASP.AGGR_241581 sample (   .0536982314)  t  WHERE TBL(SHDATASP.AGGR_241581,0,4,0,ROWID) = :objn UNION ALL SELECT  INSTANCE_ID, AX_CAADD1_TRIBUTA, TIPO_PERSONA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60006 WHERE 1 = 0 ", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60006 SELECT /*+  parallel(t,4) parallel_index(t,4) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */INSTANCE_ID,AX_CAADD1_TRIBUTA,TIPO_PERSONA, rowid SYS_DS_ALIAS_0  from SHDATASP.AGGR_241581 sample (   .0536982314)  t  WHERE TBL(SHDATASP.AGGR_241581,0,4,0,ROWID) = :objn UNION ALL SELECT  INSTANCE_ID, AX_CAADD1_TRIBUTA, TIPO_PERSONA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60006 WHERE 1 = 0 ", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60006 SELECT /*+  parallel(t,4) parallel_index(t,4) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */INSTANCE_ID,AX_CAADD1_TRIBUTA,TIPO_PERSONA, rowid SYS_DS_ALIAS_0  from SHDATASP.AGGR_241581 sample (   .0536982314)  t  WHERE TBL(SHDATASP.AGGR_241581,0,4,0,ROWID) = :objn UNION ALL SELECT  INSTANCE_ID, AX_CAADD1_TRIBUTA, TIPO_PERSONA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60006 WHERE 1 = 0 ", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60006 SELECT /*+  parallel(t,4) parallel_index(t,4) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */INSTANCE_ID,AX_CAADD1_TRIBUTA,TIPO_PERSONA, rowid SYS_DS_ALIAS_0  from SHDATASP.AGGR_241581 sample (   .0536982314)  t  WHERE TBL(SHDATASP.AGGR_241581,0,4,0,ROWID) = :objn UNION ALL SELECT  INSTANCE_ID, AX_CAADD1_TRIBUTA, TIPO_PERSONA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60006 WHERE 1 = 0 ", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257785 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'9886905d-f30d-48e6-95c5-f6903cfa471b',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp257786 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257785 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'9886905d-f30d-48e6-95c5-f6903cfa471b',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp257786 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257785 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'9886905d-f30d-48e6-95c5-f6903cfa471b',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp257786 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257785 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'9886905d-f30d-48e6-95c5-f6903cfa471b',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp257786 GROUP BY AX_TARJETA,TIP", 4),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60005 SELECT /*+  parallel(t,2) parallel_index(t,2) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */TIPO_PERSONA,INSTANCE_ID,AX_CAADD1_TRIBUTA, rowid SYS_DS_ALIAS_0  from SHLEGALP.AGGR_602601 sample (   .0664429031)  t  WHERE TBL(SHLEGALP.AGGR_602601,0,4,0,ROWID) = :objn UNION ALL SELECT  TIPO_PERSONA, INSTANCE_ID, AX_CAADD1_TRIBUTA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60005 WHERE 1 = 0 ", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60005 SELECT /*+  parallel(t,2) parallel_index(t,2) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */TIPO_PERSONA,INSTANCE_ID,AX_CAADD1_TRIBUTA, rowid SYS_DS_ALIAS_0  from SHLEGALP.AGGR_602601 sample (   .0664429031)  t  WHERE TBL(SHLEGALP.AGGR_602601,0,4,0,ROWID) = :objn UNION ALL SELECT  TIPO_PERSONA, INSTANCE_ID, AX_CAADD1_TRIBUTA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60005 WHERE 1 = 0 ", 1),
    ("SELECT COUNT(*), COUNT(RW_Codes.rw_code), COUNT(Calificaciones_nit.enumerator), COUNT(root.enumerator), COUNT(CO_RW_Codes.entity), COUNT(Calificaciones_cgvt.enumerator), COUNT(CLASIFICACION.enumerator), COUNT(CO_RW.entity) FROM SHDATASP.aggr_247387 root  LEFT OUTER JOIN SHDATASP.portfolio_255737 CO_RW_Codes ON ((CO_RW_Codes.id_unique = root.id_unique) AND ((CO_RW_Codes.instance_id = '4f37341a-0cfe-46df-a964-f9486944d8b8')))   JOIN SHDATASP.t_181747 RW_Codes ON ((RW_Codes.rw_code = CO_RW_Codes.rw_code))   LEFT OUTER JOIN SHDATASP.aggr_256532 CLASIFICACION ON (((CLASIFICACION.id_unique = root.id_unique OR (CLASIFICACION.id_unique IS NULL AND root.id_unique IS NULL))) AND ((CLASIFICACION.instance_id = '05c146d3-a1e9-4b17-823b-ba236d0605c8')))   LEFT OUTER JOIN SHDATASP.portfolio_255740 CO_RW ON ((CO_RW.id_unique = root.id_unique) AND ((CO_RW.instance_id = '0e927703-9835-4d60-b520-e2cc68fad6ee')))   LEFT OUTER JOIN SHDATASP.aggr_255702 Calificaciones_nit ON ((Calificaciones_nit.id_rtd_item", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60006 SELECT /*+  parallel(t,4) parallel_index(t,4) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */INSTANCE_ID,AX_CAADD1_TRIBUTA,TIPO_PERSONA, rowid SYS_DS_ALIAS_0  from SHDATASP.AGGR_241581 sample (   .0536982314)  t  WHERE TBL(SHDATASP.AGGR_241581,0,4,0,ROWID) = :objn UNION ALL SELECT  INSTANCE_ID, AX_CAADD1_TRIBUTA, TIPO_PERSONA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60006 WHERE 1 = 0 ", 1),
    ("insert /*+ append */ into sys.ora_temp_1_ds_60005 SELECT /*+  parallel(t,2) parallel_index(t,2) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring xmlindex_sel_idx_tbl opt_param('optimizer_inmemory_aware' 'false') no_substrb_pad  */TIPO_PERSONA,INSTANCE_ID,AX_CAADD1_TRIBUTA, rowid SYS_DS_ALIAS_0  from SHLEGALP.AGGR_602601 sample (   .0664429031)  t  WHERE TBL(SHLEGALP.AGGR_602601,0,4,0,ROWID) = :objn UNION ALL SELECT  TIPO_PERSONA, INSTANCE_ID, AX_CAADD1_TRIBUTA, SYS_DS_ALIAS_0 FROM sys.ora_temp_1_ds_60005 WHERE 1 = 0 ", 1),
    ("DELETE /*+ PARALLEL (4) */  FROM SHDATASP.aggr_255729  WHERE ((instance_id = '132dc542-a86c-4464-b00c-3162f2a6c234'))  AND entity IN ('Banco', ' ') ", 2),
    ("DELETE /*+ PARALLEL (4) */  FROM SHDATASP.aggr_255729  WHERE ((instance_id = '132dc542-a86c-4464-b00c-3162f2a6c234'))  AND entity IN ('Banco', ' ') ", 2),
    ("DELETE /*+ PARALLEL (4) */  FROM SHDATASP.aggr_255729  WHERE ((instance_id = '132dc542-a86c-4464-b00c-3162f2a6c234'))  AND entity IN ('Banco', ' ') ", 2),
    ("DELETE /*+ PARALLEL (4) */  FROM SHDATASP.aggr_255729  WHERE ((instance_id = '132dc542-a86c-4464-b00c-3162f2a6c234'))  AND entity IN ('Banco', ' ') ", 2),
    ("DELETE /*+ PARALLEL (4) */  FROM SHDATASP.aggr_255729  WHERE ((instance_id = '132dc542-a86c-4464-b00c-3162f2a6c234'))  AND entity IN ('Banco', ' ') ", 2),
    ("UPDATE SHDATASP.temp257202 SET APELLIDO_2 = translate(APELLIDO_2,UNISTR('\00c0\00c1\00c2\00c3\00c4\00c5\00e0\00e1\00e2\00e3\00ff\00e5\00c7\00e7\00d0\00c8\00c9\00ca\00cb\00ff\00e9\00ea\00eb\00cc\00cd\00ce\00cf\00ec\00ed\00ee\00ef\00d1\00f1\00d2\00d3\00d4\00d5\00d6\00d8\00f2\00f3\00ff\00f5\00f6\0160\0161\00d9\00da\00db\00dc\00f9\00fa\00fb\00ff\00d7\00bf\00dd\00ff\00ff\00bf'),'AAAAAAAAAAAACCDEEEEEEEEIIIIIIIINNOOOOOOOOOOOSSUUUUUUUUXYYYY ') ", 3),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO  SHLEGALP.temp606877 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (2) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'72214cb9-22d9-47b7-aa86-abff27e74361',TO_DATE('2024-09-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHLEGALP.temp606878 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO  SHLEGALP.temp606877 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (2) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'72214cb9-22d9-47b7-aa86-abff27e74361',TO_DATE('2024-09-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHLEGALP.temp606878 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO  SHLEGALP.temp606877 (AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,VALOR,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (2) */  AX_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,FORACID,RESERVE3,MERC_ID,MERC_NAME,TRAN_DATE,VALOR_ORG,POS_SEQ,USER_PART_TRAN_CODE,AX_TRAN_DATE_1,AX_RESERVE3,SUM(VALOR),min(rownum) + 0,MAX(model_drilldown_info_0),'72214cb9-22d9-47b7-aa86-abff27e74361',TO_DATE('2024-09-30 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHLEGALP.temp606878 GROUP BY AX_TARJETA,TIP", 4),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp257716(Fuente,num_doc,id_unique,Level1,tipo_cartera,exposicion_tot_fa,sld_tot_provision,valor_activo,expsr_aftr_crm,calificacion,ponderacion,rwa,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.Fuente,root.num_doc,root.id_unique,root.Level1,root.tipo_cartera,root.exposicion_tot_fa,root.sld_tot_provision,Nvl(root.exposicion_tot_fa,0) - Nvl(root.sld_tot_provision,0),root.expsr_aftr_crm,root.calificacion,root.ponderacion,root.rwa,1 FROM SHDATASP.aggr_256940 root  LEFT OUTER JOIN SHDATASP.aggr_198638 PROCESS_DETALLE ON ((PROCESS_DETALLE.Fuente = root.Fuente) AND (PROCESS_DETALLE.num_doc = root.num_doc) AND (PROCESS_DETALLE.id_unique = root.id_unique) AND ((PROCESS_DETALLE.Level1 = root.Level1 OR (PROCESS_DETALLE.Level1 IS NULL AND root.Level1 IS NULL))) AND ((PROCESS_DETALLE.instance_id = 'df7d2afd-0b1b-4d2e-a601-5a07f5b0ee33')))   WHERE ((root.instance_id = 'f44d87c5-f71b-479d-8fb1-7ca8c228eec0')) AND (((root.Fuente IN ('OLA_3',", 1),
    ("DELETE FROM SHREPLP.AX_ADHOC_EXTERNAL_GRAPH_1 WHERE parent_object_dbid = :1 ", 2),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("UPDATE SHDATASP.temp257202 SET APELLIDO_2 = translate(APELLIDO_2,UNISTR('\00c0\00c1\00c2\00c3\00c4\00c5\00e0\00e1\00e2\00e3\00ff\00e5\00c7\00e7\00d0\00c8\00c9\00ca\00cb\00ff\00e9\00ea\00eb\00cc\00cd\00ce\00cf\00ec\00ed\00ee\00ef\00d1\00f1\00d2\00d3\00d4\00d5\00d6\00d8\00f2\00f3\00ff\00f5\00f6\0160\0161\00d9\00da\00db\00dc\00f9\00fa\00fb\00ff\00d7\00bf\00dd\00ff\00ff\00bf'),'AAAAAAAAAAAACCDEEEEEEEEIIIIIIIINNOOOOOOOOOOOSSUUUUUUUUXYYYY ') ", 3),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("UPDATE SHDATASP.temp257202 SET NOMBRE_DE_CLIENTE = translate(NOMBRE_DE_CLIENTE,UNISTR('\00c0\00c1\00c2\00c3\00c4\00c5\00e0\00e1\00e2\00e3\00ff\00e5\00c7\00e7\00d0\00c8\00c9\00ca\00cb\00ff\00e9\00ea\00eb\00cc\00cd\00ce\00cf\00ec\00ed\00ee\00ef\00d1\00f1\00d2\00d3\00d4\00d5\00d6\00d8\00f2\00f3\00ff\00f5\00f6\0160\0161\00d9\00da\00db\00dc\00f9\00fa\00fb\00ff\00d7\00bf\00dd\00ff\00ff\00bf'),'AAAAAAAAAAAACCDEEEEEEEEIIIIIIIINNOOOOOOOOOOOSSUUUUUUUUXYYYY ') ", 3),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.aggr_255729(entity,id_unique,ccy_dnmntn,orgnl_ccy_code,enm_pstn_clss,enm_crm_clss,enm_expsr_clcltn_mthd,enm_scrtstn_rscrtstn,enm_role_scrtstn_prcss,id_scrtstn,intl_mrgn_ind,id_cntrprty,cntrprty_entity,id_trd,id_nttng_agrmnt,nttng_agrmnt_ccy,id_mrgn_agrmnt,multi_nttng_set_ind,id_clltrl_pool,id_unfndd_crm_pool,id_real_estt_pool,id_prfctly_mtchng_nttng,id_cva_nttng_agrmnt,expsr_vl_rpt,imm_expsr_vl_rpt,ovrrd_cptl_ddctn_amnt_rpt,drvtv_mrkt_vl_rpt,drvtv_ntnl_amnt_rpt,enm_trdng_bnkng,enm_on_off_bs,enm_cem_drvtv_typ,ovrrd_cem_add_on_prcntg,enm_cem_ead_allctn_apprch,enm_crdt_drvtv_typ,lng_sttlmnt_trnsctn_ind,enm_clltrl_allctn_mthd,min_crm_rqrmnts_ind,mrgn_prd_rsk,lrg_nttng_set_ind,illqd_ind,ovrrd_min_hldng_prd,rvltn_prd_dys,hrct_pstd_clltrl_ind,ovrrd_10_dy_hrct,spcfc_wrng_way_rsk_ind,dt_trd,dt_strt,dt_sttlmnt,dt_mtrty,rsdl_mtrty_mnths,orgnl_mtrty_mnths,cntry_prprty,enm_prprty_typ,unsttld_mrkt_vl_rpt,ovrrd_free_vl_trnsfrrd_rpt,dt_free_dlvry_frst,d", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp260906 (NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,IVA,INC,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,SUM(IVA),SUM(INC),min(rownum) + 0,MAX(model_drilldown_info_0),'fd4075a0-5cfb-455c-a76a-3f6f22e11a68',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp260908 GROUP BY NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_CO", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp260906 (NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,IVA,INC,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,SUM(IVA),SUM(INC),min(rownum) + 0,MAX(model_drilldown_info_0),'fd4075a0-5cfb-455c-a76a-3f6f22e11a68',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp260908 GROUP BY NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_CO", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp260906 (NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,IVA,INC,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,SUM(IVA),SUM(INC),min(rownum) + 0,MAX(model_drilldown_info_0),'fd4075a0-5cfb-455c-a76a-3f6f22e11a68',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp260908 GROUP BY NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_CO", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp260906 (NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,IVA,INC,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,SUM(IVA),SUM(INC),min(rownum) + 0,MAX(model_drilldown_info_0),'fd4075a0-5cfb-455c-a76a-3f6f22e11a68',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp260908 GROUP BY NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_CO", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp260906 (NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,IVA,INC,enumerator,model_drilldown_info_0,instance_id,asof_date,version,filing_version) SELECT /*+ PARALLEL (4) */  NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_DATO_COMER,TIPO_PERSONA_COMER,TIPO_TARJETA,SUM(IVA),SUM(INC),min(rownum) + 0,MAX(model_drilldown_info_0),'fd4075a0-5cfb-455c-a76a-3f6f22e11a68',TO_DATE('2024-12-31 00:00:00','YYYY-MM-DD HH24:MI:SS'),0,0 FROM SHDATASP.temp260908 GROUP BY NUMERO_TARJETA,COD_UNICO,VALOR_ORG,TIPO_DOC_COMERCIO,TIPO_DOC_COMER_BANCO,NIT_COMERCIO,AX_TIP_ID_TRIB_COMER,AX_ID_TRIB_CO", 1),
    ("SELECT COUNT(*), COUNT(F1023_ADQ_TD_NEQUI.enumerator), COUNT(F1023_ADQ_TD_NEQUI_1.enumerator), COUNT(root.enumerator), COUNT(F1023_AJUSTES_MANUALES.enumerator) FROM SHDATASP.aggr_257795 root  LEFT OUTER JOIN SHDATASP.aggr_257803 F1023_ADQ_TD_NEQUI ON ((F1023_ADQ_TD_NEQUI.COD_UNICO = root.MERC_ID) AND (F1023_ADQ_TD_NEQUI.F_TRX = root.TRAN_DATE) AND (F1023_ADQ_TD_NEQUI.VALOR_ORG = root.VALOR_ORG) AND (F1023_ADQ_TD_NEQUI.COD_AUTORIZACION = root.POS_SEQ) AND (F1023_ADQ_TD_NEQUI.AX_NUMERO_TARJETA = root.AX_TARJETA) AND ((F1023_ADQ_TD_NEQUI.instance_id = '7f1c03fd-6485-43c8-84bc-ff222583117e')))   LEFT OUTER JOIN SHDATASP.aggr_257803 F1023_ADQ_TD_NEQUI_1 ON ((F1023_ADQ_TD_NEQUI_1.COD_UNICO = root.MERC_ID) AND (F1023_ADQ_TD_NEQUI_1.F_TRX = root.AX_TRAN_DATE_1) AND (F1023_ADQ_TD_NEQUI_1.VALOR_ORG = root.VALOR_ORG) AND (F1023_ADQ_TD_NEQUI_1.COD_AUTORIZACION = root.POS_SEQ) AND (F1023_ADQ_TD_NEQUI_1.AX_NUMERO_TARJETA = root.AX_TARJETA) AND ((F1023_ADQ_TD_NEQUI_1.instance_id = '7f1c03fd-6485-43c8", 1),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO SHDATASP.temp261557 (instance_id,asof_date,version,filing_version,SALDO_DISPONIBLE,SALDO_EN_LIBRE,ANIO_ASOF_DATE,NOMBRE_DE_CLIENTE,DEPARTAMENTO,NRO_DE_DIAS_CUENTA_X_COBRAR,TIPO_PLAN,TABLA_DE_INTERESES,INTERES_DIARIO_CAUSADO,ULTIMA_FECHA_MOVIMIENTOS,FREEZE_CODE,ESTADO_DE_LA_CUENTA,TASA_TOTAL,AX_TIPO_ID_CODE,TASA_VARIABLE,IVA,CODIGO_DE_CANCELACION,TASA_PREFERENCIAL,COMISIONES_PAGADAS,DIRECCION_FISICA,MONTO_DE_APERTURA,INTERES_PENDIENTE_X_PAGAR,SALDO_PROMEDIO_CTA,FECHA_DE_CANCELACION,CUENTA_CONTABLE,INGRESOS,TIPO_DE_IDENTIFICACION,FECH_ACTUALIZACION_CONDICION,DESCRIPCION_FREEZE_CODE,EGRESOS,CIUDAD,DESCRIPCION_TIPO_PRODUCTO,COMISION_X_TRANSFERENCIA,source_name,EMPLEADO_O_NO_EMPLEADO,SALDO_TOTAL_EN_GUARDADITO,CELULAR,NOMBRE_2,CORREO_ELECTRONICO,NO_DE_CLIENTE,DESCRIPCION_DEL_TIPO_PLAN,NOMBRE_1,NO_CUENTA,INTERES_PAGADO,Axiom_index,TASA_FIJA,NUMERO_DE_IDENTIFICACION,SALDO_DE_LA_CUENTA,TIPO_PRODUCTO,MONEDA,FECHA_APERTURA,SALDO_TOTAL_EN_BOLSILLOS,APELLIDO_1", 1),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO SHDATASP.temp261557 (instance_id,asof_date,version,filing_version,SALDO_DISPONIBLE,SALDO_EN_LIBRE,ANIO_ASOF_DATE,NOMBRE_DE_CLIENTE,DEPARTAMENTO,NRO_DE_DIAS_CUENTA_X_COBRAR,TIPO_PLAN,TABLA_DE_INTERESES,INTERES_DIARIO_CAUSADO,ULTIMA_FECHA_MOVIMIENTOS,FREEZE_CODE,ESTADO_DE_LA_CUENTA,TASA_TOTAL,AX_TIPO_ID_CODE,TASA_VARIABLE,IVA,CODIGO_DE_CANCELACION,TASA_PREFERENCIAL,COMISIONES_PAGADAS,DIRECCION_FISICA,MONTO_DE_APERTURA,INTERES_PENDIENTE_X_PAGAR,SALDO_PROMEDIO_CTA,FECHA_DE_CANCELACION,CUENTA_CONTABLE,INGRESOS,TIPO_DE_IDENTIFICACION,FECH_ACTUALIZACION_CONDICION,DESCRIPCION_FREEZE_CODE,EGRESOS,CIUDAD,DESCRIPCION_TIPO_PRODUCTO,COMISION_X_TRANSFERENCIA,source_name,EMPLEADO_O_NO_EMPLEADO,SALDO_TOTAL_EN_GUARDADITO,CELULAR,NOMBRE_2,CORREO_ELECTRONICO,NO_DE_CLIENTE,DESCRIPCION_DEL_TIPO_PLAN,NOMBRE_1,NO_CUENTA,INTERES_PAGADO,Axiom_index,TASA_FIJA,NUMERO_DE_IDENTIFICACION,SALDO_DE_LA_CUENTA,TIPO_PRODUCTO,MONEDA,FECHA_APERTURA,SALDO_TOTAL_EN_BOLSILLOS,APELLIDO_1", 1),
    ("INSERT /*+ APPEND PARALLEL (2) */ INTO SHDATASP.temp261557 (instance_id,asof_date,version,filing_version,SALDO_DISPONIBLE,SALDO_EN_LIBRE,ANIO_ASOF_DATE,NOMBRE_DE_CLIENTE,DEPARTAMENTO,NRO_DE_DIAS_CUENTA_X_COBRAR,TIPO_PLAN,TABLA_DE_INTERESES,INTERES_DIARIO_CAUSADO,ULTIMA_FECHA_MOVIMIENTOS,FREEZE_CODE,ESTADO_DE_LA_CUENTA,TASA_TOTAL,AX_TIPO_ID_CODE,TASA_VARIABLE,IVA,CODIGO_DE_CANCELACION,TASA_PREFERENCIAL,COMISIONES_PAGADAS,DIRECCION_FISICA,MONTO_DE_APERTURA,INTERES_PENDIENTE_X_PAGAR,SALDO_PROMEDIO_CTA,FECHA_DE_CANCELACION,CUENTA_CONTABLE,INGRESOS,TIPO_DE_IDENTIFICACION,FECH_ACTUALIZACION_CONDICION,DESCRIPCION_FREEZE_CODE,EGRESOS,CIUDAD,DESCRIPCION_TIPO_PRODUCTO,COMISION_X_TRANSFERENCIA,source_name,EMPLEADO_O_NO_EMPLEADO,SALDO_TOTAL_EN_GUARDADITO,CELULAR,NOMBRE_2,CORREO_ELECTRONICO,NO_DE_CLIENTE,DESCRIPCION_DEL_TIPO_PLAN,NOMBRE_1,NO_CUENTA,INTERES_PAGADO,Axiom_index,TASA_FIJA,NUMERO_DE_IDENTIFICACION,SALDO_DE_LA_CUENTA,TIPO_PRODUCTO,MONEDA,FECHA_APERTURA,SALDO_TOTAL_EN_BOLSILLOS,APELLIDO_1", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("INSERT /*+ APPEND PARALLEL (4) */ INTO  SHDATASP.temp261559(NUMERO_TARJETA,TIPO_DOC,AX_TIP_ID_TRIB,NIT,AX_ID_TRIB,AX_APELLIDO_1,AX_APELLIDO_2,AX_NOMBRE_1,AX_NOMBRE_2,CNNAME_CLN,AX_CAADD1_TRIBUTA,AX_DEPARTAMENTO,AX_MUNICIPIO,CORREO_ELECTRONICO,TIPO_DATO,TIPO_PERSONA,TIPO_DOC_COMER_BANCO,AX_TIP_ID_TRIB_COMER,NIT_COMERCIO,AX_ID_TRIB_COMER,APELLIDO_1_COMER,APELLIDO_2_COMER,NOMBRE_1_COMER,NOMBRE_2_COMER,CNNAME_CLN_COMER,TIPO_PERSONA_COMER,TIPO_DATO_COMER,VALOR,VALOR_AJUSTE,model_drilldown_info_0) SELECT /*+ PARALLEL (4) */  root.AX_TARJETA,root.TIPO_DOC,root.AX_TIP_ID_TRIB,root.NIT,root.AX_ID_TRIB,root.AX_APELLIDO_1,root.AX_APELLIDO_2,root.AX_NOMBRE_1,root.AX_NOMBRE_2,root.CNNAME_CLN,root.AX_CAADD1_TRIBUTA,root.AX_DEPARTAMENTO,root.AX_MUNICIPIO,root.CORREO_ELECTRONICO,root.TIPO_DATO,root.TIPO_PERSONA,CASE      WHEN          F1023_ADQ_TD_NEQUI.enumerator IS NOT NULL      THEN          F1023_ADQ_TD_NEQUI.TIPO_DOC_COMER_BANCO     WHEN          F1023_ADQ_TD_NEQUI_1.enumerator IS NOT NULL      T", 1),
    ("SELECT COUNT(*), COUNT(F1023_ADQ_TD_NEQUI.enumerator), COUNT(F1023_ADQ_TD_NEQUI_1.enumerator), COUNT(root.enumerator), COUNT(F1023_AJUSTES_MANUALES.enumerator) FROM SHDATASP.aggr_257795 root  LEFT OUTER JOIN SHDATASP.aggr_257803 F1023_ADQ_TD_NEQUI ON ((F1023_ADQ_TD_NEQUI.COD_UNICO = root.MERC_ID) AND (F1023_ADQ_TD_NEQUI.F_TRX = root.TRAN_DATE) AND (F1023_ADQ_TD_NEQUI.VALOR_ORG = root.VALOR_ORG) AND (F1023_ADQ_TD_NEQUI.COD_AUTORIZACION = root.POS_SEQ) AND (F1023_ADQ_TD_NEQUI.AX_NUMERO_TARJETA = root.AX_TARJETA) AND ((F1023_ADQ_TD_NEQUI.instance_id = '7f1c03fd-6485-43c8-84bc-ff222583117e')))   LEFT OUTER JOIN SHDATASP.aggr_257803 F1023_ADQ_TD_NEQUI_1 ON ((F1023_ADQ_TD_NEQUI_1.COD_UNICO = root.MERC_ID) AND (F1023_ADQ_TD_NEQUI_1.F_TRX = root.AX_TRAN_DATE_1) AND (F1023_ADQ_TD_NEQUI_1.VALOR_ORG = root.VALOR_ORG) AND (F1023_ADQ_TD_NEQUI_1.COD_AUTORIZACION = root.POS_SEQ) AND (F1023_ADQ_TD_NEQUI_1.AX_NUMERO_TARJETA = root.AX_TARJETA) AND ((F1023_ADQ_TD_NEQUI_1.instance_id = '7f1c03fd-6485-43c8", 1),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
    ("SELECT u.id, u.name, COUNT(o.id) FROM users u LEFT JOIN orders o ON u.id = o.user_id GROUP BY u.id, u.name HAVING COUNT(o.id) > 10", 5),
    ("WITH ranked_orders AS (SELECT user_id, total, RANK() OVER (PARTITION BY user_id ORDER BY total DESC) as rnk FROM orders) SELECT user_id, total FROM ranked_orders WHERE rnk = 1", 5),
    ("SELECT user_id, SUM(amount) FROM transactions WHERE status = 'APPROVED' GROUP BY user_id HAVING SUM(amount) > 5000", 4),
    ("SELECT name, (SELECT COUNT(*) FROM purchases WHERE purchases.customer_id = customers.id) AS total_purchases FROM customers", 5),
    ("UPDATE accounts SET balance = balance - 100 WHERE user_id = 20 AND (SELECT COUNT(*) FROM transactions WHERE transactions.user_id = accounts.user_id AND transactions.amount > 1000) > 5", 5),
    ("DELETE FROM logs WHERE created_at < NOW() - INTERVAL 1 YEAR AND severity = 'LOW'", 4),
    ("SELECT department, AVG(salary) FROM employees WHERE department IN (SELECT DISTINCT department FROM employees WHERE salary > 50000) GROUP BY department", 5),
    ("INSERT INTO order_summary (order_id, total, created_at) SELECT id, SUM(amount), NOW() FROM order_details GROUP BY id", 5),
]

def get_training_data():
    return query_data
